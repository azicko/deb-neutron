#!/bin/sh
### BEGIN INIT INFO
# Provides:          neutron-plugin-openvswitch-agent
# Required-Start:    $network $local_fs $remote_fs $syslog openvswitch-switch
# Required-Stop:     $remote_fs openvswitch-switch
# Should-Start:      mysql postgresql rabbitmq-server keystone
# Should-Stop:       mysql postgresql rabbitmq-server keystone
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Neutron OpenVSwitch Agent
# Description:       Agent to use within neutron openswitch client
### END INIT INFO

# Authors: Julien Danjou <acid@debian.org>, Thomas Goirand <zigo@debian.org>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Openstack Neutron OpenVSwitch Plugin Agent"
NAME=neutron-openvswitch-agent
DAEMON=/usr/bin/neutron-openvswitch-agent
DAEMON_ARGS="--config-file=/etc/neutron/neutron.conf"
PIDFILE=/var/run/neutron/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
CONF_FILE=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# Exit if the package is not installed
[ -x $DAEMON ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/openstack ] && . /etc/default/openstack
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

[ "x$USE_SYSLOG" = "xyes" ] && DAEMON_ARGS="${DAEMON_ARGS} --use-syslog"
[ "x$USE_LOGFILE" != "xno" ] && DAEMON_ARGS="${DAEMON_ARGS} --log-file=/var/log/neutron/ovs-agent.log"

. /lib/lsb/init-functions

[ -r /usr/share/neutron-common/plugin_guess_func ] || exit 0
. /usr/share/neutron-common/plugin_guess_func

### Maintain the plugin selection so that we can load the corresponding .ini file ###
if ! [ -r /etc/neutron/neutron.conf ] ; then
	echo "Cloud not read /etc/neutron/neutron.conf: exiting"
	exit 0
fi

CURRENT_PLUGIN=`grep "^[ \t]*core_plugin[ \t]*=[ \t]*[._a-zA-Z0-9]*\$" /etc/neutron/neutron.conf | sed -e 's/^[ \t]*core_plugin[ \t]*=[ \t]*//'`
if [ -z "${CURRENT_PLUGIN}" ] ; then
	echo "No core_plugin= value found: please set it and try again"
	exit 0
fi
neutron_core_plugin_to_plugin_name ${CURRENT_PLUGIN}
neutron_plugin_ini_path ${NEUTRON_PLUGIN_NAME}
if [ ${NEUTRON_PLUGIN_NAME} = ml2 ]; then
            DAEMON_ARGS="${DAEMON_ARGS} --config-file=${CONF_FILE}"
fi
if [ -z "${NEUTRON_PLUGIN_CONFIG}" ] ; then
	echo "Plugin not recognized: please edit /etc/init.d/neutron-server to select the correct .ini file to load for your plugin"
else
	DAEMON_ARGS="${DAEMON_ARGS} --config-file=${NEUTRON_PLUGIN_CONFIG}"
	DESC="${DESC} with ${NEUTRON_PLUGIN_NAME} plugin"
fi

mkdir -p /var/run/neutron
chown neutron:neutron /var/run/neutron

do_start()
{
	if [ -x /usr/bin/neutron-ovs-cleanup ] ; then
		if [ ! -e /var/run/neutron-ovs-cleanup-performed ] ; then
			/usr/bin/neutron-ovs-cleanup
			touch /var/run/neutron-ovs-cleanup-performed
		fi
	fi
	start-stop-daemon --start --background --quiet --chuid neutron:neutron --make-pidfile --pidfile $PIDFILE --startas $DAEMON --test > /dev/null \
		|| return 1
	start-stop-daemon --start --background --quiet --chuid neutron:neutron --make-pidfile --pidfile $PIDFILE --startas $DAEMON -- \
	        $DAEMON_ARGS \
		|| return 2
}

do_stop()
{
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
	RETVAL="$?"
	rm -f $PIDFILE
	return "$RETVAL"
}

case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
  ;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  systemd-start)
      do_start
       ;;
  systemd-stop)
      do_stop
      ;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
